/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardSlider".
 */
export type CardSlider =
  | {
      imageSrc?: string | Media | null;
      floorRooms: number;
      floorBaths: number;
      floorBeds: number;
      floorPrice: number;
      floorSize: number;
      content: string;
      id?: string | null;
    }[]
  | null;

export interface Config {
  collections: {
    users: User;
    media: Media;
    properties: Property;
    tags: Tag;
    contact: Contact;
    propertyType: PropertyType;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  user_name?: string | null;
  roles?: ('admin' | 'user' | 'seller')[] | null;
  phone_number?: string | null;
  first_name?: string | null;
  last_name?: string | null;
  position?: string | null;
  language?: string | null;
  company?: string | null;
  tax_number?: string | null;
  address?: string | null;
  about?: string | null;
  profile_pic?: string | Media | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    sixteenByNineMedium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties".
 */
export interface Property {
  id: string;
  propertiesDetails: {
    title?: string | null;
    description?: string | null;
    propertyType?: ('For sale' | 'For rent') | null;
    status?: ('For sale' | 'For rent')[] | null;
    price?: number | null;
  };
  Media: {
    propertyImages?:
      | {
          image?: string | Media | null;
          id?: string | null;
        }[]
      | null;
  };
  location: {
    location?: Location;
  };
  Nearby_places: {
    education: {
      education?:
        | {
            name?: string | null;
            distance?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    medical: {
      medical?:
        | {
            name?: string | null;
            Distance?: string | null;
            id?: string | null;
          }[]
        | null;
    };
    transportation: {
      transportation?:
        | {
            name?: string | null;
            Distance?: string | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  details: {
    details?: Details;
  };
  owner: {
    userDetails?: {
      userName?: string | null;
      phoneNumber?: string | null;
      whatsAppNumber?: string | null;
      userEmail?: string | null;
    };
  };
  floors: {
    floors?: CardSlider;
  };
  amenities: {
    amenities?:
      | (
          | 'Attic'
          | 'Basketball court'
          | 'Air Conditioning'
          | 'Lawn'
          | 'Swimming Pool'
          | 'Barbeque'
          | 'Microwave'
          | 'TV Cable'
          | 'Dryer'
          | 'Outdoor Shower'
          | 'Washer'
          | 'Gym'
          | 'Ocean view'
          | 'Private space'
          | 'Lake view'
          | 'Wine cellar'
          | 'Front yard'
          | 'Refrigerator'
          | 'WiFi'
          | 'Laundry'
          | 'Sauna'
        )[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Location".
 */
export interface Location {
  address?: string | null;
  maplocation?: string | null;
  city?: string | null;
  state?: string | null;
  country?: string | null;
  zipcode?: string | null;
  /**
   * @minItems 2
   * @maxItems 2
   */
  locationPoints?: [number, number] | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Details".
 */
export interface Details {
  label?: ('Rented' | 'Sold') | null;
  yearBuild?: number | null;
  rooms?: number | null;
  baths?: number | null;
  beds?: number | null;
  garages?: number | null;
  garagesSize?: number | null;
  homearea?: number | null;
  lotarea?: number | null;
  material?: ('Wood' | 'Block' | 'Brick' | 'Rock') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  tag?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: string;
  first_name?: string | null;
  last_name?: string | null;
  email?: string | null;
  query?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "propertyType".
 */
export interface PropertyType {
  id: string;
  type?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}